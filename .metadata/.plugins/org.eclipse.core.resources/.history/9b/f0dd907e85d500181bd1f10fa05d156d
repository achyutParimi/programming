package com.samsung.test;

public class EditWord {
	
	public boolean checkDiffOne(String longStr, String str){
		int ctr=0;
		for(int i = 0; i< longStr.length(); i++){
			if(longStr.charAt(i) != str.charAt(i)) {
				ctr++;
				if(ctr >1) return false;
			}
		}
		
		return true;
		
	}
	public boolean isValid(String str1, String str2){
		int s1length = str1.length();
		int s2length = str2.length();
		
		if(s1length > s2length){
			if(s1length -s2length >= 2) return false;
			
			return checkDiffOne(str1, str2);
			
		}else{
			if(s2length -s1length >= 2) return false;
			
			return checkDiffOne(str2, str1);
		}
		
		
	}
	public int editCheck(String []str1, String str2, int k){
		
		int wordCount=0;
		for(int i = 0; i < str1.length; i++) {
		

			
		if(str1[i].compareTo(str2) != 0){
	        if(str1[i].length() > str2.length()){
	        	if(str1[i].contains(str2) == true) wordCount++;
	        	
	        }
	        else if(str1[i].length() < str2.length() ){
	        	if(str2.contains(str1[i]) == true) wordCount++;
	        } 
	        else {
				for(int j = 0; j < str1[i].length(); j++){
					char c = str1[i].charAt(j);
					char temp;
					while(c <= 'z'){
						temp = str1[i].charAt(j);
						String str=str1[i].replace(str1[i].charAt(j), c );
						if(str.compareTo(str2) == 0) {
							wordCount++;
							break;
						}
						c++;
						str1[i].replace(str1[i].charAt(j), temp );
					}
				}
	        } // end of else
		}
		
	}
		
		return wordCount;
	}
	
	int maxCount = 0;
	public static void main(String []args){

		EditWord ew = new EditWord();
		int count = 0;
		String[] words = { "cat", "dig", "dog"};
/*		String[] words = { "cat", "dig", "dog", "fig", "fin",
                "fine", "fog", "log", "wine" };*/
		for(int i = 0; i<words.length; i++){
			
			if(isValid(words[i], str2) == false) continue;
			
			count = ew.editCheck(words, words[i], i);
			
			System.out.println("wordCount :"+count);
			if(count > ew.maxCount) 
				ew.maxCount = count;

		}
		
		System.out.println("Eureka ..."+ew.maxCount);
		
	}
	
}
